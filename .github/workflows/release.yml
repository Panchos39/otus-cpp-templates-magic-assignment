name: 'C++ CI'


on:
  push:
    branches:
      - main
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Get Conan
        id : conan
        uses: turtlebrowser/get-conan@main
        with:
          version: 1.60.2
      - name: Conan version
        run: echo "${{ steps.conan.outputs.version }}"
      
      - name: Create default profile
        run: conan profile new default --detect
      
      - name: Update profile
        run: conan profile update settings.compiler.libcxx=libstdc++11 default
      
      - name: Create build folder
        run: mkdir ${{github.workspace}}/build

      - name: Install dependencies
        run: >
         cd ${{github.workspace}}/build &&
         conan install ..
         -s build_type=${{env.BUILD_TYPE}}
         --output-folder=${{github.workspace}}/build
         --build=missing
      
      - name: Check conan deps installation
        run: ls ${{github.workspace}}/build 

      - name: Configure CMake
        run: >
         cmake -B ${{github.workspace}}/build
         -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
         -DPATCH_VERSION=${{ github.run_number }}
         -DWITH_BOOST_TEST=ON
         -DWITH_GOOGLE_TEST=ON
      
      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      
      - name: Testing
        run: cmake --build ${{github.workspace}}/build --target test
      
      - name: Build package
        run: cmake --build ${{github.workspace}}/build --target package
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{github.workspace}}/build/print_ip-0.0.${{ github.run_number }}-Linux.deb
          asset_name: print_ip-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package
      
      # Build the HTML documentation
      - name: Doxygen Action
        uses: mattnotmitt/doxygen-action@v1.1.0
        with:
          doxyfile-path: ./Doxyfile
          working-directory: .

      # Deploy the HTML documentation to GitHub Pages
      - name: GH Pages Deployment
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/html/
          enable_jekyll: false
          allow_empty_commit: false
          force_orphan: true
          publish_branch: gh-pages